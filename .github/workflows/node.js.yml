# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI


on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  parse:  
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - name: Checkout
      uses: actions/checkout@v3
       
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: site/package-lock.json
        
    - name: Build
      run: |
        npm ci
        npm run cli -- --dir ./database/persons --file ./export/jdp-tree.json
        
    - name: Copy
      run: cp export/jdp-tree.json site/src/js/tree.json
      
    - name: Commit
      run: |
        git config --global user.name github-actions
        git config --global user.email github-actions@github.com
        git checkout -b gh-pages
        git add export/jdp-tree.json site/src/js/tree.json
        git commit -m "Automated file creation."
        git push -f origin gh-pages
        
  build:
    runs-on: ubuntu-latest
    needs: parse
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
       ref: gh-pages      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: site/package-lock.json
    - name: Build
      working-directory: site
      run: |
        npm ci
        npm run build --if-present
    - name: Copy static assets
      working-directory: site
      run: |
        cp src/images/budotree_h.mp4 dist/images/budotree_h.mp4 && cp src/preview.html dist/preview.html
    - name: Upload artefacts
      uses: actions/upload-pages-artifact@v1
      with:
        path: site/dist
  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2 
